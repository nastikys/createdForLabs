//ИП-81. Бойко А. Лаб№8. Вариант 5.
//На основі заданої матриці А (n х n) побудувати вектор Х(n) наступним чином: рядки матриці впорядкувати по зменшенню елементів її першого стовпця і як Х прийняти головну діагональ перетвореної матриці.
#include <iostream>
#include <random>
#include <ctime>
#include <iomanip>

using std::cout;
using std::cin;
using std::endl;

void inputValueOfN( int n)
{
	cout << "Input value of n in nxn matrix: ";
	cin >> n;
}


void createMatrixNumbers(int** matrix, int sizeLines, int sizeColumns) {
	srand(rand());
	for (int i = 0; i < sizeLines; i++) {
		for (int j = 0; j < sizeColumns; j++) {
			matrix[i][j] = rand() % 50;
		}
	}
}

void printMatrix(int n, int** matrix)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cout << matrix[i][j] << " ";
		}
		cout << endl;
	}
}


void matrixModify(int n, int** matrix)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			int temp;
			if (matrix[i][0] > matrix[j][0])
			{
				for (int k = 0; k < n; k++)
				{
					temp = matrix[i][k];
					matrix[i][k] = matrix[j][k];
					matrix[j][k] = temp;
				}

			}
		}

	}
}



void diagonal(int n,int** matrix)
{
	cout << "Diagonal of the modified matrix is:" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << matrix[i][i] << " ";
	}
}


int main()
{
	int n;
	inputValueOfN(n);
	int** matrix = new int*[n];
	for (int i = 0; i < n; i++)
	{
		matrix[i] = new int[n];
	}
	createMatrixNumbers(matrix,n,n);
	cout << "Matrix before sorting " << endl;
	printMatrix(n, matrix);
	matrixModify(n, matrix);
	cout << "Matrix after sorting " << endl;
	printMatrix(n, matrix);
	diagonal(n, matrix);
	for (int i = 0; i < n; i++) 
	{
		delete matrix[i];
	}
	delete matrix;
	system("pause");
}
